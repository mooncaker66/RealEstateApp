// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstateApp.Entities;

namespace RealEstateApp.Migrations
{
    [DbContext(typeof(RealEstateDbContext))]
    [Migration("20210430040411_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealEstateApp.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 100000,
                            EmailAddress = "zhixun@usf.edu",
                            FirstName = "Zhixuu",
                            LastName = "Zhao",
                            PhoneNumber = "123456789"
                        });
                });

            modelBuilder.Entity("RealEstateApp.Entities.House", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Baths")
                        .HasColumnType("int");

                    b.Property<int>("Beds")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Community")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasAirCondition")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBasement")
                        .HasColumnType("bit");

                    b.Property<bool>("HasGym")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHeating")
                        .HasColumnType("bit");

                    b.Property<bool>("HasLaudry")
                        .HasColumnType("bit");

                    b.Property<bool>("HasParking")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPool")
                        .HasColumnType("bit");

                    b.Property<int>("PropertyType")
                        .HasColumnType("int");

                    b.Property<int>("Rooms")
                        .HasColumnType("int");

                    b.Property<int>("SquareFeet")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Ages = "0 - 10 Years",
                            Baths = 2,
                            Beds = 3,
                            City = "Ocala",
                            Community = "On Top of The World",
                            HasAirCondition = true,
                            HasBasement = false,
                            HasGym = true,
                            HasHeating = true,
                            HasLaudry = true,
                            HasParking = true,
                            HasPool = true,
                            PropertyType = 1,
                            Rooms = 0,
                            SquareFeet = 3000,
                            State = "FL",
                            Street = "8650 SW 95th Unit F",
                            ZipCode = "34481"
                        },
                        new
                        {
                            ID = 2,
                            Ages = "0 - 10 Years",
                            Baths = 2,
                            Beds = 3,
                            City = "New Port Richey",
                            Community = "Colonial Hills",
                            HasAirCondition = true,
                            HasBasement = false,
                            HasGym = false,
                            HasHeating = true,
                            HasLaudry = true,
                            HasParking = true,
                            HasPool = false,
                            PropertyType = 2,
                            Rooms = 0,
                            SquareFeet = 1535,
                            State = "FL",
                            Street = "5855 Mockingbird Dr",
                            ZipCode = "34652"
                        },
                        new
                        {
                            ID = 3,
                            Ages = "0 - 10 Years",
                            Baths = 2,
                            Beds = 4,
                            City = "Jacksonville",
                            Community = "Spring Road",
                            HasAirCondition = true,
                            HasBasement = false,
                            HasGym = false,
                            HasHeating = false,
                            HasLaudry = true,
                            HasParking = true,
                            HasPool = false,
                            PropertyType = 1,
                            Rooms = 0,
                            SquareFeet = 2879,
                            State = "FL",
                            Street = "13933 Sound Overlook Dr N",
                            ZipCode = "32224"
                        },
                        new
                        {
                            ID = 4,
                            Ages = "0 - 10 Years",
                            Baths = 2,
                            Beds = 4,
                            City = "Avon Park",
                            Community = "Spring Road",
                            HasAirCondition = true,
                            HasBasement = false,
                            HasGym = false,
                            HasHeating = false,
                            HasLaudry = false,
                            HasParking = false,
                            HasPool = false,
                            PropertyType = 3,
                            Rooms = 0,
                            SquareFeet = 984,
                            State = "FL",
                            Street = "759 NE Turtles Turn",
                            ZipCode = "33825"
                        },
                        new
                        {
                            ID = 5,
                            Ages = "0 - 10 Years",
                            Baths = 9,
                            Beds = 7,
                            City = "Atlanta",
                            Community = "Spring Road",
                            HasAirCondition = true,
                            HasBasement = true,
                            HasGym = true,
                            HasHeating = true,
                            HasLaudry = true,
                            HasParking = true,
                            HasPool = true,
                            PropertyType = 1,
                            Rooms = 0,
                            SquareFeet = 11000,
                            State = "GA ",
                            Street = "3511 Roxboro Rd NE",
                            ZipCode = "30326"
                        });
                });

            modelBuilder.Entity("RealEstateApp.Entities.HouseImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HouseID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ID");

                    b.HasIndex("HouseID");

                    b.ToTable("HouseImage");
                });

            modelBuilder.Entity("RealEstateApp.Entities.Listing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<int>("ListingType")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HouseId");

                    b.ToTable("Listings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EmployeeId = 100000,
                            HouseId = 1,
                            ListingType = 1,
                            Price = 100000m
                        },
                        new
                        {
                            ID = 2,
                            EmployeeId = 100000,
                            HouseId = 2,
                            ListingType = 2,
                            Price = 17000m
                        },
                        new
                        {
                            ID = 3,
                            EmployeeId = 100000,
                            HouseId = 3,
                            ListingType = 1,
                            Price = 410000m
                        },
                        new
                        {
                            ID = 4,
                            EmployeeId = 100000,
                            HouseId = 4,
                            ListingType = 1,
                            Price = 8900m
                        },
                        new
                        {
                            ID = 5,
                            EmployeeId = 100000,
                            HouseId = 5,
                            ListingType = 1,
                            Price = 3300000m
                        });
                });

            modelBuilder.Entity("RealEstateApp.Entities.HouseImage", b =>
                {
                    b.HasOne("RealEstateApp.Entities.House", "House")
                        .WithMany("HouseImages")
                        .HasForeignKey("HouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("RealEstateApp.Entities.Listing", b =>
                {
                    b.HasOne("RealEstateApp.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateApp.Entities.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("House");
                });

            modelBuilder.Entity("RealEstateApp.Entities.House", b =>
                {
                    b.Navigation("HouseImages");
                });
#pragma warning restore 612, 618
        }
    }
}
